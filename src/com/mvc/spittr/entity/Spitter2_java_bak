package com.mvc.spittr.entity;

import java.io.Serializable;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.springframework.stereotype.Component;

@Entity
@Table(name = "SPITTER", schema = "HIBERNATE")
public class Spitter implements Serializable {

	/**
	 * serialVersionUID
	 */
	private static final long serialVersionUID = 5423001819232221965L;

	@Id
	@Column(name = "SPITTER_ID", nullable = false, unique = true)

	// GenerationType.AUTO
	// This is the default strategy and is portable across different databases.
	// Hibernate chooses the appropriate ID based on the database.
	// schema resource at runtime.
	@GeneratedValue(strategy = GenerationType.AUTO)
	private long id;

	@NotNull
	@Size(min = 2, max = 30)
	@Column(name = "FIRSTNAME", nullable = true)
	private String firstName;

	@NotNull
	@Size(min = 2, max = 30)
	@Column(name = "LASTNAME", nullable = true)
	private String lastName;

	@NotNull
	@Size(min = 1, max = 16)
	@Column(name = "USERNAME", nullable = true)
	private String username;

	@NotNull
	@Size(min = 5, max = 25)
	@Column(name = "PASSWORD", nullable = true)
	private String password;

	// @OneToMany(cascade = CascadeType.ALL)
	// @Column(name = "SPITTER_ID", nullable = true)
	// @JoinTable(name = "SPITTER_SPITTLE", joinColumns = @JoinColumn(name =
	// "SPITTER_ID"), inverseJoinColumns = @JoinColumn(name = "SPITTLE_ID"))
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	@Column(name = "SPITTER_ID", nullable = true)
	@JoinColumn(name = "SPITTER_ID")
	private List<Spittle> spittles = new LinkedList<>();

	// @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	// @JoinTable(name = "SPITTER_SPITTER_ROLE",
	// joinColumns = { @JoinColumn(name = "SPITTER_ID") },
	// inverseJoinColumns = { @JoinColumn(name = "SPITTER_ROLE_ID") })
//	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
//	@Column(name = "ROLE", nullable = true)
//	@JoinColumn(name = "ROLE_ID")
//	private Set<SpitterRole> roles = new HashSet<>();

	/**
	 * Default Constructor
	 */
	public Spitter() {
		super();

	}

	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;

	}

	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;

	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;

	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;

	}

	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public List<Spittle> getSpittles() {
		return spittles;
	}

	public void setSpittles(List<Spittle> spittles) {
		this.spittles = spittles;
	}
//
//	public Set<SpitterRole> getRoles() {
//		return roles;
//	}
//
//	public void setRoles(Set<SpitterRole> roles) {
//		this.roles = roles;
//	}

	@Override
	public String toString() {
		return "Spitter [id=" + id + ", firstName=" + firstName + ", lastName=" + lastName + ", username=" + username
				+ ", spittles=" + spittles + "]";
	}

}
